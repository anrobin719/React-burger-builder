{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/React-burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/React-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      purchasing: false\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.props.history.push('/checkout');\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.onInitIngredients();\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    return sum > 0;\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.props.ings);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.props.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n\n    if (this.props.ings) {\n      burger = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Burger, {\n        ingredients: this.props.ings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.props.onIngredientAdded,\n        ingredientRemoved: this.props.onIngredientRemoved,\n        disabled: disabledInfo,\n        purchasable: this.updatePurchaseState(this.props.ings),\n        ordered: this.purchaseHandler,\n        price: this.props.price,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.props.ings,\n        price: this.props.price,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName => dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName => dispatch(burgerBuilderActions.removeIngredient(ingName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/Users/macbook/Desktop/React-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","burgerBuilderActions","axios","BurgerBuilder","state","purchasing","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","componentDidMount","console","log","onInitIngredients","updatePurchaseState","ingredients","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","ings","key","orderSummary","burger","error","onIngredientAdded","onIngredientRemoved","price","mapStateToProps","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as burgerBuilderActions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        \n        // {salad: true, meat: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice,\n        error: state.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));"]},"metadata":{},"sourceType":"module"}