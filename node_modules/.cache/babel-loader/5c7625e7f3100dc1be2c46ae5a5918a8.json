{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/React-burger-builder/src/containers/Checkout/Checkout.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport * as actionsTypes from '../../store/actions';\n\nclass Checkout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.checkoutCancelledHandler = () => {\n      this.props.history.goBack();\n    };\n\n    this.checkoutContinuedHandler = () => {\n      this.props.history.replace('/checkout/contact-data');\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(CheckoutSummary, {\n      ingredients: this.state.ingredients,\n      checkoutCancelled: this.checkoutCancelledHandler,\n      checkoutContinued: this.checkoutContinuedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: this.props.match.path + '/contact-data',\n      render: props => React.createElement(ContactData, Object.assign({\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);","map":{"version":3,"sources":["/Users/macbook/Desktop/React-burger-builder/src/containers/Checkout/Checkout.js"],"names":["React","Component","Route","connect","CheckoutSummary","ContactData","actionsTypes","Checkout","checkoutCancelledHandler","props","history","goBack","checkoutContinuedHandler","replace","render","state","ingredients","match","path","totalPrice","mapStateToProps","ings","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,eAAP,MAA4B,wDAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAE7BO,wBAF6B,GAEF,MAAM;AAC7B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB;AACH,KAJ4B;;AAAA,SAM7BC,wBAN6B,GAMF,MAAM;AAC7B,WAAKH,KAAL,CAAWC,OAAX,CAAmBG,OAAnB,CAA4B,wBAA5B;AACH,KAR4B;AAAA;;AAU7BC,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,eAAD;AACI,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAD5B;AAEI,MAAA,iBAAiB,EAAE,KAAKR,wBAF5B;AAGI,MAAA,iBAAiB,EAAE,KAAKI,wBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWQ,KAAX,CAAiBC,IAAjB,GAAwB,eADlC;AAEI,MAAA,MAAM,EAAGT,KAAD,IAAY,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKM,KAAL,CAAWC,WAArC;AAAkD,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWI;AAApE,SAAoFV,KAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAWH;;AAtB4B;;AAyBjC,MAAMW,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AACHM,IAAAA,IAAI,EAAEN,KAAK,CAACC,WADT;AAEHM,IAAAA,KAAK,EAAEP,KAAK,CAACI;AAFV,GAAP;AAIH,CALD;;AAOA,eAAehB,OAAO,CAACiB,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport * as actionsTypes from '../../store/actions';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.state.ingredients}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout);"]},"metadata":{},"sourceType":"module"}