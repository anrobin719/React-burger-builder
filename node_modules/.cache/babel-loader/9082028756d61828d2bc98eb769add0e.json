{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'; // const INGREDIENT_PRICES = {\n//     salad: 0.5,\n//     cheese: 0.4,\n//     meat: 1.3,\n//     bacon: 0.6,\n// }\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      ingredientsPrice: {\n        salad: 0.5,\n        cheese: 0.4,\n        meat: 1.3,\n        bacon: 0.6\n      },\n      totalPrice: 4,\n      purchaseable: true\n    };\n\n    this.moreHandler = type => {\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount + 1;\n      // const updatedIngredients = {\n      //     ...this.state.ingredients\n      // };\n      // updatedIngredients[type] = updatedCount;\n      // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.state.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = this.state.ingredientsPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState();\n    };\n\n    this.lessHandler = type => {\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount - 1;\n      // const updatedIngredients = {\n      //     ...this.state.ingredients\n      // };\n      // updatedIngredients[type] = updatedCount;\n      // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.state.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeducition = this.state.ingredientsPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeducition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n    };\n  }\n\n  updatePurchaseState() {\n    const ingredients = _objectSpread({}, this.state.ingredients);\n\n    const sum = Object.keys(ingredients).reduce((prevItem, currentItem) => {\n      return prevItem + currentItem;\n    }, 0);\n    this.setState({\n      purchaseable: sum < 0\n    });\n  }\n\n  componentDidMount() {\n    console.log(this.state.totalPrice, 'didMount');\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.totalPrice, 'didUpdate');\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      lessBtn: this.lessHandler,\n      moreBtn: this.moreHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchaseable: this.state.purchaseable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/macbook/Desktop/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","BurgerBuilder","state","ingredients","salad","bacon","cheese","meat","ingredientsPrice","totalPrice","purchaseable","moreHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","lessHandler","priceDeducition","sum","Object","keys","reduce","prevItem","currentItem","componentDidMount","console","log","componentDidUpdate","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\n\n// const INGREDIENT_PRICES = {\n//     salad: 0.5,\n//     cheese: 0.4,\n//     meat: 1.3,\n//     bacon: 0.6,\n// }\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {salad: 0, bacon: 0, cheese: 0, meat: 0},\n        ingredientsPrice: {salad: 0.5, cheese: 0.4, meat: 1.3, bacon: 0.6},\n        totalPrice: 4,\n        purchaseable: true,\n    }\n\n    updatePurchaseState () {\n        const ingredients = {\n            ...this.state.ingredients\n        };\n        const sum = Object.keys(ingredients).reduce((prevItem, currentItem) => {\n            return prevItem + currentItem;\n        },0);\n        this.setState({purchaseable: sum < 0});\n    }\n\n    componentDidMount() {\n        console.log(this.state.totalPrice, 'didMount');\n    }\n    componentDidUpdate() {\n        console.log(this.state.totalPrice, 'didUpdate');\n    }\n\n    moreHandler = (type) => {\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount + 1;\n        // const updatedIngredients = {\n        //     ...this.state.ingredients\n        // };\n        // updatedIngredients[type] = updatedCount;\n\n        // const priceAddition = INGREDIENT_PRICES[type];\n        // const oldPrice = this.state.totalPrice;\n        // const newPrice = oldPrice + priceAddition;\n\n        // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount\n\n        const priceAddition = this.state.ingredientsPrice[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({\n            ingredients: updatedIngredients, totalPrice: newPrice\n        });\n        this.updatePurchaseState();\n    }\n\n    lessHandler = (type) => {\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount - 1;\n        // const updatedIngredients = {\n        //     ...this.state.ingredients\n        // };\n        // updatedIngredients[type] = updatedCount;\n\n        // const priceAddition = INGREDIENT_PRICES[type];\n        // const oldPrice = this.state.totalPrice;\n        // const newPrice = oldPrice + priceAddition;\n\n        // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount;\n\n        const priceDeducition = this.state.ingredientsPrice[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeducition;\n        \n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        // {salad: true, meat: false, ...}\n\n        return(\n            <Aux>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    lessBtn={this.lessHandler}\n                    moreBtn={this.moreHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchaseable={this.state.purchaseable} />\n            </Aux>\n        );\n    }\n\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}