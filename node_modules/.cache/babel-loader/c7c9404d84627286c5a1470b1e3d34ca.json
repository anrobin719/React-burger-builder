{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/React-burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/React-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'; // const INGREDIENT_PRICES = {\n//     salad: 0.5,\n//     cheese: 0.4,\n//     meat: 1.3,\n//     bacon: 0.6,\n// }\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      ingredientsPrice: {\n        salad: 0.5,\n        cheese: 0.4,\n        meat: 1.3,\n        bacon: 0.6\n      },\n      totalPrice: 4,\n      purchaseable: true,\n      purchasing: false\n    };\n\n    this.moreHandler = type => {\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount + 1;\n      // const updatedIngredients = {\n      //     ...this.state.ingredients\n      // };\n      // updatedIngredients[type] = updatedCount;\n      // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.state.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = this.state.ingredientsPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.lessHandler = type => {\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount - 1;\n      // const updatedIngredients = {\n      //     ...this.state.ingredients\n      // };\n      // updatedIngredients[type] = updatedCount;\n      // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.state.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeducition = this.state.ingredientsPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeducition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert('You continue!');\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((prevItem, currentItem) => {\n      return prevItem + currentItem;\n    }, 0);\n    this.setState({\n      purchaseable: sum < 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      hide: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      hide: this.purchaseCancelHandler,\n      continue: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      lessBtn: this.lessHandler,\n      moreBtn: this.moreHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchaseable: this.state.purchaseable,\n      purchasing: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/macbook/Desktop/React-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","BurgerBuilder","state","ingredients","salad","bacon","cheese","meat","ingredientsPrice","totalPrice","purchaseable","purchasing","moreHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","lessHandler","priceDeducition","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","Object","values","reduce","prevItem","currentItem","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux'\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\n// const INGREDIENT_PRICES = {\n//     salad: 0.5,\n//     cheese: 0.4,\n//     meat: 1.3,\n//     bacon: 0.6,\n// }\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {salad: 0, bacon: 0, cheese: 0, meat: 0},\n        ingredientsPrice: {salad: 0.5, cheese: 0.4, meat: 1.3, bacon: 0.6},\n        totalPrice: 4,\n        purchaseable: true,\n        purchasing: false,\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.values(ingredients)\n        .reduce((prevItem, currentItem) => {\n            return prevItem + currentItem;\n        },0);\n        this.setState({purchaseable: sum < 0});\n    }\n\n\n    moreHandler = (type) => {\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount + 1;\n        // const updatedIngredients = {\n        //     ...this.state.ingredients\n        // };\n        // updatedIngredients[type] = updatedCount;\n\n        // const priceAddition = INGREDIENT_PRICES[type];\n        // const oldPrice = this.state.totalPrice;\n        // const newPrice = oldPrice + priceAddition;\n\n        // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount\n\n        const priceAddition = this.state.ingredientsPrice[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({\n            ingredients: updatedIngredients, totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    lessHandler = (type) => {\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount - 1;\n        // const updatedIngredients = {\n        //     ...this.state.ingredients\n        // };\n        // updatedIngredients[type] = updatedCount;\n\n        // const priceAddition = INGREDIENT_PRICES[type];\n        // const oldPrice = this.state.totalPrice;\n        // const newPrice = oldPrice + priceAddition;\n\n        // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount;\n\n        const priceDeducition = this.state.ingredientsPrice[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeducition;\n        \n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n    purchaseContinueHandler = () => {\n        alert('You continue!');\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        // {salad: true, meat: false, ...}\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} hide={this.purchaseCancelHandler}>\n                    <OrderSummary\n                        ingredients={this.state.ingredients}\n                        hide={this.purchaseCancelHandler}\n                        continue={this.purchaseContinueHandler}\n                        price={this.state.totalPrice} />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    lessBtn={this.lessHandler}\n                    moreBtn={this.moreHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchaseable={this.state.purchaseable}\n                    purchasing={this.purchaseHandler} />\n            </Aux>\n        );\n    }\n\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}