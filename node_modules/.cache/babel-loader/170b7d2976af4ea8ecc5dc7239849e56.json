{"ast":null,"code":"import _objectSpread from \"/Users/macbook/Desktop/React-burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macbook/Desktop/React-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Loding from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'; // const INGREDIENT_PRICES = {\n//     salad: 0.5,\n//     cheese: 0.4,\n//     meat: 1.3,\n//     bacon: 0.6,\n// }\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      ingredientsPrice: {\n        salad: 0.5,\n        cheese: 0.4,\n        meat: 1.3,\n        bacon: 0.6\n      },\n      totalPrice: 4,\n      purchaseable: true,\n      purchasing: false,\n      loading: false\n    };\n\n    this.moreHandler = type => {\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount + 1;\n      // const updatedIngredients = {\n      //     ...this.state.ingredients\n      // };\n      // updatedIngredients[type] = updatedCount;\n      // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.state.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = this.state.ingredientsPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.lessHandler = type => {\n      // const oldCount = this.state.ingredients[type];\n      // const updatedCount = oldCount - 1;\n      // const updatedIngredients = {\n      //     ...this.state.ingredients\n      // };\n      // updatedIngredients[type] = updatedCount;\n      // const priceAddition = INGREDIENT_PRICES[type];\n      // const oldPrice = this.state.totalPrice;\n      // const newPrice = oldPrice + priceAddition;\n      // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeducition = this.state.ingredientsPrice[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeducition;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: newPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Robin An',\n          address: {\n            street: 'Teststreet 1',\n            zipCode: '41351',\n            country: 'Germany'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(error => {\n        this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.values(ingredients).reduce((prevItem, currentItem) => {\n      return prevItem + currentItem;\n    }, 0);\n    this.setState({\n      purchaseable: sum < 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    let orderSummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      hide: this.purchaseCancelHandler,\n      continue: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Loding, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      hide: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, orderSummary), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      lessBtn: this.lessHandler,\n      moreBtn: this.moreHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchaseable: this.state.purchaseable,\n      purchasing: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/Users/macbook/Desktop/React-burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Loding","withErrorHandler","BurgerBuilder","state","ingredients","salad","bacon","cheese","meat","ingredientsPrice","totalPrice","purchaseable","purchasing","loading","moreHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","lessHandler","priceDeducition","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","sum","Object","values","reduce","prevItem","currentItem","render","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux'\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Loding from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\n// const INGREDIENT_PRICES = {\n//     salad: 0.5,\n//     cheese: 0.4,\n//     meat: 1.3,\n//     bacon: 0.6,\n// }\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {salad: 0, bacon: 0, cheese: 0, meat: 0},\n        ingredientsPrice: {salad: 0.5, cheese: 0.4, meat: 1.3, bacon: 0.6},\n        totalPrice: 4,\n        purchaseable: true,\n        purchasing: false,\n        loading: false,\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.values(ingredients)\n        .reduce((prevItem, currentItem) => {\n            return prevItem + currentItem;\n        },0);\n        this.setState({purchaseable: sum < 0});\n    }\n\n\n    moreHandler = (type) => {\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount + 1;\n        // const updatedIngredients = {\n        //     ...this.state.ingredients\n        // };\n        // updatedIngredients[type] = updatedCount;\n\n        // const priceAddition = INGREDIENT_PRICES[type];\n        // const oldPrice = this.state.totalPrice;\n        // const newPrice = oldPrice + priceAddition;\n\n        // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount\n\n        const priceAddition = this.state.ingredientsPrice[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n\n        this.setState({\n            ingredients: updatedIngredients, totalPrice: newPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    lessHandler = (type) => {\n        // const oldCount = this.state.ingredients[type];\n        // const updatedCount = oldCount - 1;\n        // const updatedIngredients = {\n        //     ...this.state.ingredients\n        // };\n        // updatedIngredients[type] = updatedCount;\n\n        // const priceAddition = INGREDIENT_PRICES[type];\n        // const oldPrice = this.state.totalPrice;\n        // const newPrice = oldPrice + priceAddition;\n\n        // this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        }\n        updatedIngredients[type] = updatedCount;\n\n        const priceDeducition = this.state.ingredientsPrice[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeducition;\n        \n        this.setState({ingredients: updatedIngredients, totalPrice: newPrice});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true});\n    }\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false});\n    }\n    purchaseContinueHandler = () => {\n        this.setState({loading: true});\n        const order = {\n            ingredients: this.state.ingredients,\n            price: this.state.totalPrice,\n            customer: {\n                name: 'Robin An',\n                address: {\n                    street: 'Teststreet 1',\n                    zipCode: '41351',\n                    country: 'Germany'\n                },\n                email: 'test@test.com',\n            },\n            deliveryMethod: 'fastest'\n        }\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({loading: false, purchasing: false});\n            })\n            .catch(error => {\n                this.setState({loading: false, purchasing: false});\n            });\n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for(let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n        // {salad: true, meat: false, ...}\n\n        let orderSummary = <OrderSummary\n        ingredients={this.state.ingredients}\n        hide={this.purchaseCancelHandler}\n        continue={this.purchaseContinueHandler}\n        price={this.state.totalPrice} />;\n        if (this.state.loading) {\n            orderSummary = <Loding />\n        }\n\n        return(\n            <Aux>\n                <Modal show={this.state.purchasing} hide={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    lessBtn={this.lessHandler}\n                    moreBtn={this.moreHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchaseable={this.state.purchaseable}\n                    purchasing={this.purchaseHandler} />\n            </Aux>\n        );\n    }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);"]},"metadata":{},"sourceType":"module"}