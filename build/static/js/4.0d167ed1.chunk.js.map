{"version":3,"sources":["containers/Auth/Auth.css","containers/Auth/Auth.js","components/UI/Input/Input.js","components/UI/Input/Input.css"],"names":["module","exports","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangedHandler","event","controlName","updatedControls","updateObject","_this","Object","_Users_macbook_Desktop_React_burger_builder_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementsArray","key","push","id","config","form","map","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_9__","invalid","shouldValidate","changed","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_11__","errorMessage","error","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","className","classes","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_10__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","dispatch","actions","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","inputElement","inputClasses","InputElement","Invalid","assign","join","onChange","options","option","displayValue","Input","Label","label"],"mappings":"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","file":"static/js/4.0d167ed1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__2YUr1\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport classes from './Auth.css';\nimport * as actions from '../../store/actions/index';\nimport { updateObject, checkValidity } from '../../shared/utility';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n\n    componentDidMount () {\n        if ( !this.props.buildingBurger && this.props.authRedirectPath !== '/' ) {\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject( this.state.controls, {\n            [controlName]: updateObject( this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity( event.target.value, this.state.controls[controlName].validation ),\n                touched: true\n            } )\n        } );\n        this.setState( { controls: updatedControls } );\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState( prevState => {\n            return { isSignup: !prevState.isSignup };\n        } );\n    }\n\n    render () {\n        const formElementsArray = [];\n        for ( let key in this.state.controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        if ( this.props.loading ) {\n            form = <Spinner />\n        }\n\n        let errorMessage = null;\n\n        if ( this.props.error ) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if ( this.props.isAuthenticated ) {\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button\n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\n        onSetAuthRedirectPath: () => dispatch( actions.setAuthRedirectPath( '/' ) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( Auth );","import React from 'react';\n\nimport classes from './Input.css';\n\nconst input = (props) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch(props.elementType) {\n        case('input'):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case('textarea'):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case('select'):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n            className={inputClasses.join(' ')}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed} />;\n    }   \n\n    return(\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n}\n\n\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};"],"sourceRoot":""}